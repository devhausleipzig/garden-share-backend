// *** DO NOT EDIT. GENERATED BY PRISMIX. ***
datasource db {
	provider = "postgresql"
	url = env("DATABASE_URL")
}
generator client {
	provider = "prisma-client-js"
}
model User {
	identifier String @id @default(uuid())
	bookings Booking[] @relation(name: "BookingToUser")
	messages Message[] @relation(name: "MessageToUser")
	reactions Reaction[] @relation(name: "ReactionToUser")
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	role Role @default(USER)
	email String @unique
	firstName String 
	lastName String 
	passwordHash String 
	passwordSalt String 
	profilePicture String? 
}
model Message {
	identifier String @id @default(uuid())
	booking Booking? @relation(name: "BookingToMessage")
	title String 
	content String 
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	image String? 
	author User? @relation(name: "MessageToUser", fields: [userId], references: [identifier])
	userId String? 
	reactions Reaction[] @relation(name: "MessageToReaction")
}
model Task {
	identifier String @id @default(uuid())
	booking Booking? @relation(name: "BookingToTask", fields: [bookingId], references: [identifier])
	bookingId String? 
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	type TaskType 
	deadline DateTime 
	steps Json 
	repeating Repeats @default(NONE)
}
model Booking {
	identifier String @id @default(uuid())
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	start DateTime 
	end DateTime 
	private Boolean @default(false)
	overnight Boolean @default(false)
	published Boolean @default(false)
	title String? 
	bookedBy User? @relation(name: "BookingToUser", fields: [userId], references: [identifier])
	userId String? 
	message Message? @relation(name: "BookingToMessage", fields: [messageId], references: [identifier])
	messageId String? @unique
	tasks Task[] @relation(name: "BookingToTask")
}
model Garden {
	identifier String @id @default(uuid())
}
model Reaction {
	identifier String @id @default(uuid())
	message Message @relation(name: "MessageToReaction", fields: [messageId], references: [identifier])
	messageId String 
	emoji String 
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	users User[] @relation(name: "ReactionToUser")
}
enum TaskType {
	HARVESTING
	WATERING
	PRUNING
	SEEDING
	BUILDING
	WEEDING
}
enum Repeats {
	NONE
	DAILY
	WEEKLY
	MONTHLY
}
enum Role {
	ADMIN
	USER
}